---
ruleType: contextual
alwaysApply: false
description: ---
source: claude-code-skill
skill: executing-plans
---

# Executing Plans

---

## Overview

This cursor rule is based on the Claude Code "Executing Plans" skill, adapted for the new Cursor rules format.

**When to apply:** When executing a documented plan

## Methodology

Load plan, review critically, execute tasks in batches, report for review between batches.
**Core principle:** Batch execution with checkpoints for architect review.
**Announce at start:** "I'm using the executing-plans skill to implement this plan."

## Core Principles

**Announce at start:** "I'm using the executing-plans skill to implement this plan."

## Workflow

1. Read plan file
2. Review critically - identify any questions or concerns about the plan
3. If concerns: Raise them with your human partner before starting
4. If no concerns: Create TodoWrite and proceed
5. *Default: First 3 tasks**
6. Mark as in_progress
7. Run verifications as specified
8. Mark as completed
9. Show what was implemented
10. Show verification output
11. Say: "Ready for feedback."
12. Apply changes if needed
13. Execute next batch
14. Repeat until complete
15. Announce: "I'm using the finishing-a-development-branch skill to complete this work."
16. **REQUIRED SUB-SKILL:** Use superpowers:finishing-a-development-branch
17. Follow that skill to verify tests, present options, execute choice

## Integration

This rule works best when combined with:
- `.cursor/rules/writing-plans.mdc`
- `.cursor/rules/verification-before-completion.mdc`

## Implementation Guide

---
# Executing Plans

---

## Original Claude Code Skill Reference

<details>
<summary>Click to expand full skill content</summary>

---
name: executing-plans
description: Use when partner provides a complete implementation plan to execute in controlled batches with review checkpoints - loads plan, reviews critically, executes tasks in batches, reports for review between batches
---

# Executing Plans

## Overview

Load plan, review critically, execute tasks in batches, report for review between batches.

**Core principle:** Batch execution with checkpoints for architect review.

**Announce at start:** "I'm using the executing-plans skill to implement this plan."

## The Process

### Step 1: Load and Review Plan
1. Read plan file
2. Review critically - identify any questions or concerns about the plan
3. If concerns: Raise them with your human partner before starting
4. If no concerns: Create TodoWrite and proceed

### Step 2: Execute Batch
**Default: First 3 tasks**

For each task:
1. Mark as in_progress
2. Follow each step exactly (plan has bite-sized steps)
3. Run verifications as specified
4. Mark as completed

### Step 3: Report
When batch complete:
- Show what was implemented
- Show verification output
- Say: "Ready for feedback."

### Step 4: Continue
Based on feedback:
- Apply changes if needed
- Execute next batch
- Repeat until complete

### Step 5: Complete Development

After all tasks complete and verified:
- Announce: "I'm using the finishing-a-development-branch skill to complete this work."
- **REQUIRED SUB-SKILL:** Use superpowers:finishing-a-development-branch
- Follow that skill to verify tests, present options, execute choice

## When to Stop and Ask for Help

**STOP executing immediately when:**
- Hit a blocker mid-batch (missing dependency, test fails, instruction unclear)
- Plan has critical gaps preventing starting
- You don't understand an instruction
- Verification fails repeatedly

**Ask for clarification rather than guessing.**

## When to Revisit Earlier Steps

**Return to Review (Step 1) when:**
- Partner updates the plan based on your feedback
- Fundamental approach needs rethinking

**Don't force through blockers** - stop and ask.

## Remember
- Review plan critically first
- Follow plan steps exactly
- Don't skip verifications
- Reference skills when plan says to
- Between batches: just report and wait
- Stop when blocked, don't guess


</details>

---

**Converted from:** Claude Code Skill - executing-plans
**Format:** Cursor Rules (.mdc)
**Location:** `.cursor/rules/executing-plans.mdc`
