version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: prpm-postgres
    environment:
      POSTGRES_DB: prpm_registry
      POSTGRES_USER: prpm
      POSTGRES_PASSWORD: prpm_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./registry/migrations:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prpm -d prpm_registry"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: prpm-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  registry:
    build:
      context: ./registry
      dockerfile: Dockerfile
    container_name: prpm-registry
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: prpm_registry
      DB_USER: prpm
      DB_PASSWORD: prpm_dev_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PORT: 3000
      HOST: 0.0.0.0
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./registry/src:/app/src:ro
      - ./registry/package.json:/app/package.json:ro
    command: npm run dev

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
