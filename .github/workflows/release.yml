name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Install pkg
      run: npm install -g pkg
    
    - name: Create binaries directory
      run: mkdir -p binaries
    
    - name: Build binaries (macOS)
      if: matrix.os == 'macos-latest'
      run: pkg dist/index.js --targets node18-macos-x64,node18-macos-arm64 --output binaries/prmp
      shell: bash
    
    - name: Build binaries (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: pkg dist/index.js --targets node18-linux-x64 --output binaries/prmp
      shell: bash
    
    - name: Build binaries (Windows)
      if: matrix.os == 'windows-latest'
      run: pkg dist/index.js --targets node18-win-x64 --output binaries/prmp
      shell: bash
    
    - name: Upload binaries
      uses: actions/upload-artifact@v4
      with:
        name: prmp-binaries-${{ matrix.os }}
        path: binaries/prmp-*
    
  release-all:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
    
    - name: Debug artifacts structure
      run: |
        echo "Artifacts directory structure:"
        find ./artifacts -type f -name "*" | head -20
        echo "Contents of each artifact directory:"
        for dir in ./artifacts/*/; do
          echo "Directory: $dir"
          ls -la "$dir" || echo "Directory not found or empty"
        done
    
    - name: Create Release with all binaries
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/**/prmp-*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
