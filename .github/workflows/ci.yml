name: CI

on:
  pull_request:
    branches: [main, develop]

jobs:
  # Registry Service Tests
  registry-tests:
    name: Registry Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: prpm
          POSTGRES_PASSWORD: prpm
          POSTGRES_DB: prpm_registry
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    defaults:
      run:
        working-directory: ./packages/registry

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build types package (required dependency)
        working-directory: ./
        run: npm run build --workspace=@prpm/types

      - name: Start MinIO
        run: |
          docker run -d \
            --name minio \
            -p 9000:9000 -p 9001:9001 \
            -e MINIO_ROOT_USER=minioadmin \
            -e MINIO_ROOT_PASSWORD=minioadmin \
            minio/minio:latest server /data --console-address ":9001"

      - name: Wait for MinIO
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:9000/minio/health/live 2>/dev/null; do echo "Waiting for MinIO..."; sleep 2; done'
          echo "✅ MinIO is ready"

      - name: Type check
        run: npx tsc --noEmit

      - name: Build
        run: npm run build

      - name: Run tests
        run: npm test -- --run
        env:
          DATABASE_URL: postgresql://prpm:prpm@localhost:5432/prpm_registry
          REDIS_URL: redis://localhost:6379
          S3_ENDPOINT: http://localhost:9000
          S3_ACCESS_KEY: minioadmin
          S3_SECRET_KEY: minioadmin
          S3_BUCKET: prpm-packages
          JWT_SECRET: test-secret-key-for-ci
          NODE_ENV: test

  # CLI Tests
  cli-tests:
    name: CLI Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./packages/cli

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build types package (required dependency)
        working-directory: ./
        run: npm run build --workspace=@prpm/types

      - name: Build registry-client
        working-directory: ./
        run: npm run build --workspace=@prpm/registry-client

      - name: Type check
        run: npx tsc --noEmit

      - name: Run tests
        run: npm test

      - name: Build
        run: npm run build

  # Registry Client Tests
  registry-client-tests:
    name: Registry Client Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./packages/registry-client

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build types package (required dependency)
        working-directory: ./
        run: npm run build --workspace=@prpm/types

      - name: Run tests
        run: npm test

      - name: Type check
        run: npx tsc --noEmit

      - name: Build
        run: npm run build

  # Security Checks
  security:
    name: Security Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run npm audit
        run: |
          cd packages/registry && npm audit --audit-level=high || echo "Vulnerabilities found"
          cd ../packages/cli && npm audit --audit-level=high || echo "Vulnerabilities found"
          cd ../packages/registry-client && npm audit --audit-level=high || echo "Vulnerabilities found"

  # Types Package Tests
  types-tests:
    name: Types Package Build
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./packages/types

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npx tsc --noEmit

      - name: Build
        run: npm run build

  # Webapp Tests
  webapp-tests:
    name: Webapp Build & Type Check
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./packages/webapp

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npx tsc --noEmit

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

  # All checks summary
  all-checks:
    name: All Checks
    runs-on: ubuntu-latest
    needs: [registry-tests, cli-tests, registry-client-tests, types-tests, webapp-tests, security]
    if: always()

    steps:
      - name: Summary
        run: echo "✅ CI checks completed"
