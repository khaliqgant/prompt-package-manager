name: Infrastructure Deploy

on:
  push:
    paths:
      - 'packages/infra/**'
      - '.github/workflows/infra-*.yml'
    branches:
      - main
  workflow_dispatch:
    inputs:
      stack:
        description: 'Pulumi stack to deploy'
        required: true
        type: choice
        options:
          - prod

permissions:
  contents: read
  id-token: write

env:
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  AWS_REGION: us-east-1

jobs:
  deploy:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    environment: ${{ inputs.stack || 'prod' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Pulumi
        uses: pulumi/actions@v5

      - name: Switch to Beanstalk configuration
        working-directory: packages/infra
        run: |
          if [ ! -f index-beanstalk.ts ]; then
            echo "Error: index-beanstalk.ts not found"
            exit 1
          fi
          # Backup current index.ts if it's not already beanstalk
          if ! grep -q "Elastic Beanstalk" index.ts 2>/dev/null; then
            cp index.ts index-ecs-backup.ts
            echo "ℹ️  Backed up ECS configuration to index-ecs-backup.ts"
          fi
          cp index-beanstalk.ts index.ts
          echo "✅ Switched to Beanstalk configuration"

      - name: Configure Stack
        working-directory: packages/infra
        run: |
          STACK="${{ inputs.stack || 'prod' }}"
          pulumi stack select $STACK || pulumi stack init $STACK

          # AWS region
          pulumi config set aws:region ${{ env.AWS_REGION }}

          # Database credentials
          pulumi config set db:username prmp
          pulumi config set --secret db:password "${{ secrets.DB_PASSWORD }}"

          # GitHub OAuth
          pulumi config set --secret github:clientId "${{ secrets.GITHUB_CLIENT_ID }}"
          pulumi config set --secret github:clientSecret "${{ secrets.GITHUB_CLIENT_SECRET }}"

          # Beanstalk configuration
          pulumi config set app:instanceType t3.micro
          pulumi config set app:minSize 1
          pulumi config set app:maxSize 2

          # Domain configuration
          if [ "$STACK" = "prod" ]; then
            pulumi config set app:domainName registry.prmp.dev
          fi

      - name: Pulumi Up
        working-directory: packages/infra
        run: |
          STACK="${{ inputs.stack || 'prod' }}"
          pulumi up --yes --non-interactive
        env:
          PULUMI_CONFIG_PASSPHRASE: ${{ secrets.PULUMI_CONFIG_PASSPHRASE }}

      - name: Export Pulumi Outputs
        working-directory: packages/infra
        run: |
          pulumi stack output --json > stack-outputs.json
          cat stack-outputs.json

      - name: Upload Outputs
        uses: actions/upload-artifact@v4
        with:
          name: pulumi-outputs-${{ inputs.stack || 'prod' }}
          path: packages/infra/stack-outputs.json
          retention-days: 30
